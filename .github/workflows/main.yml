name : Conditional env and matrix

on: 
  workflow_dispatch:
    inputs:
      viktig:
        description: 'Insert number here (fail if under 7)'
        required: true
        type: string

jobs: 
  the-number-job:
    runs-on: ubuntu-latest
    env:
      NUMBER_INPUT: ${{ inputs.viktig }}
    steps:
      - name: The number was 7 or higher
        if: ${{ inputs.viktig }} >= 7
        run: echo "The number was 7 or higher!"

      - name: The number was lower than 7
        if: ${{ inputs.viktig }} < 7
        run: |
         echo "The number was lower than 7. The rest of this job will not run."
         echo "Value of inputs.viktig: ${{ inputs.viktig }}"
         if [ $NUMBER_INPUT -lt 7 ]; then
         echo "Exiting with code 42"
         exit 42
         fi
        
      - name: Another step
        run: echo "step that will not run if number is lower than 7..."
          
      - name: Another step
        run: echo "another step that will not run if number is lower than 7..."

  the-env-job:
    runs-on: ubuntu-latest
    env: 
      JOB_ENV: 'Hello from job'

    steps: 
      - name: Testing env var that should be 'Hello from job'
        run: echo "The env var is in fact $JOB_ENV"

      - name: Creating env var in step that should be 'Hello from step'
        env:
          STEP_ENV: 'Hello from step'
        run: echo "The env var in step is in fact $STEP_ENV"

      - name: Testing if I can access all env vars from here
        run: |
          echo "The input number env var is $NUMBER_INPUT"
          echo "The job env var is $JOB_ENV"
          echo "The step env var is $STEP_ENV"

  the-OS-job:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet_version: [7.0, 6.0, 5.0]
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet_version }}
          
        




      
        
